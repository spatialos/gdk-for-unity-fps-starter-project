---
# Generated by <circle ci pipeline new>; this file *should* be edited manually to add or modify steps.
#
# Steps are executed based on the version in version control, and so you *do not* need to upload changes to BuildKite, just
#  commit them and send a PR to GitHub as you normally would.
#
# You may find the example pipeline steps listed here helpful: https://buildkite.com/docs/pipelines/defining-steps#example-pipeline but please
#  note that the setup is already done, so you should not manually adjust anything through the BuildKite interface.
#
windows: &windows
  agents:
    - "capable_of_building=gdk-for-unity"
    - "environment=production"
    - "permission_set=builder"
    - "platform=windows"
    - "queue=v3-1570547724-22c6030099a0f41d-------z"
    - "scaler_version=2"
    - "minimum_instances=1"
    - "agent_count=1"
    - "machine_type=quad"
  timeout_in_minutes: 60 # TODO(ENG-548): reduce timeout once agent-cold-start is optimised.
  retry:
    automatic:
        # This is designed to trap and retry failures because agent lost connection. Agent exits with -1 in this case.
      - exit_status: -1
        limit: 3
        # This is designed to trap and retry failures because of a buildkite bug.
      - exit_status: 255
        limit: 3
        # Workaround for flaky Git clones, likely due to - https://github.com/PowerShell/Win32-OpenSSH/issues/1322
      - exit_status: 128
        limit: 3

linux: &linux
  agents:
    - "capable_of_building=gdk-for-unity"
    - "environment=production"
    - "permission_set=builder"
    - "platform=linux"  # if you need a different platform, configure this: macos|linux|windows.
    - "queue=v3-1562766449-11b126f880607f28-------z"
    - "scaler_version=2"
  timeout_in_minutes: 60 # TODO(ENG-548): reduce timeout once agent-cold-start is optimised.
  retry:
    automatic:
        # This is designed to trap and retry failures because agent lost connection. Agent exits with -1 in this case.
      - exit_status: -1
        limit: 3

macos: &macos
  agents:
    - "capable_of_building=gdk-for-unity"
    - "environment=production"
    - "permission_set=builder"
    - "platform=macos"
    - "queue=${DARWIN_BUILDER_QUEUE:-v4-1582049359-33db24b626f71fa8}"
  timeout_in_minutes: 60 # TODO(ENG-548): reduce timeout once agent-cold-start is optimised.
  retry:
    automatic:
        # This is designed to trap and retry failures because agent lost connection. Agent exits with -1 in this case.
      - exit_status: -1
        limit: 3

# NOTE: step labels turn into commit-status names like {org}/{repo}/{pipeline}/{step-label}, lower-case and hyphenated.
# These are then relied on to have stable names by other things, so once named, please beware renaming has consequences.

dag: true

steps:
  - label: ":debian: ~ lint :lint-roller:"
    command: bash -c ci/lint.sh
    <<: *linux
    
  - label: ":windows: ~ test"
    id: "test"
    command: bash -c ci/test.sh
    <<: *windows
    artifact_paths:
      - logs/**/*

  - label: ":debian: ~ annotate test results :pencil2:"
    depends_on: 
      - step: "test"
        allow_failure: true
    plugins: 
      - improbable/test-summary#d7289cac8297018fd1b452dcf828979307b3ebc6:
          inputs:
            - label: ":octagonal_sign: Test failures "
              artifact_path: "logs\\nunit\\*.xml"
              type: nunit
          formatter:
            type: details
    <<: *linux

  - label: ":windows: ~ build :android:"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *windows
    artifact_paths:
      - logs/**/*
    env:
      WORKER_TYPE: "MobileClient"
      BUILD_ENVIRONMENT: "local"
      BUILD_TARGET_FILTER: "android"
      SCRIPTING_BACKEND: "mono"

  - label: ":darwin: ~ build :ios:"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *macos
    artifact_paths:
      - logs/**/*
    env:
      WORKER_TYPE: "MobileClient"
      BUILD_ENVIRONMENT: "local"
      BUILD_TARGET_FILTER: "ios"
      SCRIPTING_BACKEND: "il2cpp"
      TARGET_IOS_SDK: "simulator"

  - label: ":windows: ~ build UnityClient mono"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *windows
    artifact_paths:
      - logs/**/*
    env:
      WORKER_TYPE: "UnityClient"
      BUILD_ENVIRONMENT: "cloud"
      SCRIPTING_BACKEND: "mono"

  - label: ":windows: ~ build UnityClient il2cpp"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *windows
    artifact_paths:
      - logs/**/*
    env:
      WORKER_TYPE: "UnityClient"
      BUILD_ENVIRONMENT: "local"
      SCRIPTING_BACKEND: "il2cpp"

  - label: ":windows: ~ build UnityGameLogic mono"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *windows
    artifact_paths:
      - logs/**/*
    env:
      WORKER_TYPE: "UnityGameLogic"
      BUILD_ENVIRONMENT: "cloud"
      SCRIPTING_BACKEND: "mono"

  - label: ":windows: ~ build SimulatedPlayerCoordinator mono"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *windows
    artifact_paths:
      - logs/**/*
    env:
      WORKER_TYPE: "SimulatedPlayerCoordinator"
      BUILD_ENVIRONMENT: "cloud"
      SCRIPTING_BACKEND: "mono"
