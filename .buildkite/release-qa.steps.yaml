---
# Generated by <circle ci pipeline new>; this file *should* be edited manually to add or modify steps.
#
# Steps are executed based on the version in version control, and so you *do not* need to upload changes to BuildKite, just
#  commit them and send a PR to GitHub as you normally would.
#
# You may find the example pipeline steps listed here helpful: https://buildkite.com/docs/pipelines/defining-steps#example-pipeline but please
#  note that the setup is already done, so you should not manually adjust anything through the BuildKite interface.
#
common: &common
  agents:
    - "capable_of_building=gdk-for-unity"
    - "environment=production"
    - "permission_set=builder"
    - "platform=windows"
    - "queue=v3-1570547724-22c6030099a0f41d-------z"
    - "scaler_version=2"
    - "minimum_instances=1"
    - "agent_count=1"
    - "machine_type=quad"
  timeout_in_minutes: 60 # TODO(ENG-548): reduce timeout once agent-cold-start is optimised.
  retry:
    automatic:
        # This is designed to trap and retry failures because agent lost connection. Agent exits with -1 in this case.
      - exit_status: -1
        limit: 3
        # This is designed to trap and retry failures because of a buildkite bug.
      - exit_status: 255
        limit: 3
        # Workaround for flaky Git clones, likely due to - https://github.com/PowerShell/Win32-OpenSSH/issues/1322
      - exit_status: 128
        limit: 3

# NOTE: step labels turn into commit-status names like {org}/{repo}/{pipeline}/{step-label}, lower-case and hyphenated.
# These are then relied on to have stable names by other things, so once named, please beware renaming has consequences.

steps:
  - label: "test"
    command: bash -c ci/test.sh
    <<: *common
    artifact_paths:
      - logs/**/*

  - label: "build :android:"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *common
    artifact_paths:
      - logs/**/*
      - build/assembly/**/*
    env:
      WORKER_TYPE: "MobileClient"
      BUILD_ENVIRONMENT: "local"
      BUILD_TARGET_FILTER: "android"
      SCRIPTING_BACKEND: "mono"

  - label: "build :ios:"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *common
    artifact_paths:
      - logs/**/*
      - build/assembly/**/*
    env:
      WORKER_TYPE: "MobileClient"
      BUILD_ENVIRONMENT: "local"
      BUILD_TARGET_FILTER: "ios"
      SCRIPTING_BACKEND: "il2cpp"

  - label: "build UnityClient mono"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *common
    artifact_paths:
      - logs/**/*
      - build/assembly/**/*
    env:
      WORKER_TYPE: "UnityClient"
      BUILD_ENVIRONMENT: "cloud"
      SCRIPTING_BACKEND: "mono"

  - label: "build UnityGameLogic mono"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *common
    artifact_paths:
      - logs/**/*
      - build/assembly/**/*
    env:
      WORKER_TYPE: "UnityGameLogic"
      BUILD_ENVIRONMENT: "cloud"
      SCRIPTING_BACKEND: "mono"

  - label: "build SimulatedPlayerCoordinator mono"
    command: bash -c .shared-ci/scripts/build-worker.sh
    <<: *common
    artifact_paths:
      - logs/**/*
      - build/assembly/**/*
    env:
      WORKER_TYPE: "SimulatedPlayerCoordinator"
      BUILD_ENVIRONMENT: "cloud"
      SCRIPTING_BACKEND: "mono"
  - wait
  - label: Launch deployments
    command: bash -c ci/launch.sh
    <<: *common
    env:
      ASSEMBLY_PREFIX: "fps"
      PROJECT_NAME: "unity_gdk"
